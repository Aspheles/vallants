<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="499.99808"
   height="413.12939"
   viewBox="0 0 132.29115 109.30715"
   version="1.1"
   id="svg1"
   inkscape:version="1.4 (86a8ad7, 2024-10-11)"
   sodipodi:docname="Vallants Assets.svg"
   xml:space="preserve"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview1"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     inkscape:document-units="px"
     showborder="true"
     inkscape:zoom="0.35355339"
     inkscape:cx="9418.6623"
     inkscape:cy="7199.7613"
     inkscape:window-width="1920"
     inkscape:window-height="1017"
     inkscape:window-x="-8"
     inkscape:window-y="1072"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1"
     showguides="true"
     showgrid="false"><inkscape:page
       x="0"
       y="0"
       width="132.29115"
       height="109.30715"
       id="page2"
       margin="0"
       bleed="0" /></sodipodi:namedview><defs
     id="defs1" /><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-2379.5783,-1699.3477)"><path
       style="fill:#1d0d4c;fill-opacity:1;stroke:none;stroke-width:0.298873;stroke-linecap:round;paint-order:markers stroke fill"
       d="m 2454.1187,1699.3478 c -23.2309,0 -43.2165,14.7405 -52.7091,32.6893 l -0.4367,0.826 0.6941,0.6258 c 2.7382,2.47 5.5868,5.1347 8.4619,7.916 l 0.4495,0.4349 0.614,-0.1191 c 0.4208,-0.082 0.8508,-0.1385 1.286,-0.1734 0.4927,0 0.9883,0.024 1.4833,0.083 v 0 c 5.91,0.6972 10.3134,5.4079 10.007,10.268 -0.052,0.7435 -0.2129,1.468 -0.4787,2.1598 l -0.2685,0.6999 0.5114,0.5487 c 0.8107,0.8695 1.606,1.7313 2.3833,2.5836 l 0.8465,0.9288 0.8931,-0.8932 c 0.028,-0.028 0.021,-0.028 0.049,0 0.028,0.028 0.028,0.021 0,0.049 l -0.9305,0.9305 -5.567,5.5653 c -0.024,0.024 -0.02,0.026 -0.047,0 -0.028,-0.028 -0.028,-0.021 0,-0.049 l 0.8938,-0.8937 -0.9311,-0.8464 c -1.0813,-0.9832 -2.179,-1.9958 -3.2882,-3.0331 l -0.4652,-0.4355 -0.6211,0.1418 c -1.2754,0.291 -2.6332,0.3628 -3.994,0.2067 -5.9068,-0.6967 -10.3081,-5.4024 -10.007,-10.2598 0.076,-0.9357 0.3232,-1.8388 0.7355,-2.6822 l 0.3678,-0.7525 -0.5791,-0.6047 c -1.3528,-1.4131 -2.6747,-2.8169 -3.9566,-4.2018 l -1.4237,-1.5381 -0.6059,2.0063 c -1.2607,4.177 -1.9427,8.425 -1.9427,12.6186 0,16.88 6.5788,30.5767 17.2092,39.9802 10.6304,9.4035 25.2671,14.5274 41.3654,14.5274 16.2161,0 32.4719,-7.5008 43.615,-18.324 11.1431,-10.8233 17.2439,-25.1504 12.5305,-38.6341 -0.7349,-2.1025 -2.3028,-3.4315 -4.0575,-4.1661 -1.7547,-0.7346 -3.7098,-0.9855 -5.6156,-1.2084 -1.9057,-0.2228 -3.7673,-0.4128 -5.2618,-0.8633 -1.4944,-0.4505 -2.5588,-1.0948 -3.228,-2.2538 -0.3379,-0.5853 -0.2333,-1.7531 0.5125,-3.4417 0.7457,-1.6887 2.0199,-3.7341 3.3395,-5.8736 1.3197,-2.1395 2.6859,-4.3782 3.6204,-6.5886 0.9345,-2.2105 1.4838,-4.4472 0.861,-6.5542 -1.8008,-6.093 -8.3969,-11.2927 -16.9482,-15.1328 -7.7083,-3.4616 -17.0912,-5.7549 -26.3389,-6.1772 l 0.099,-0.089 z m -0.015,2.4004 h 0.014 c 9.819,0 20.1684,2.3647 28.3848,6.0545 8.2165,3.6897 14.1923,8.759 15.6302,13.6238 0.3713,1.2565 0.061,2.9718 -0.7706,4.9396 -0.8319,1.9677 -2.1388,4.134 -3.4522,6.2635 -1.3134,2.1295 -2.6326,4.2165 -3.4925,6.1637 -0.8599,1.9471 -1.3735,3.9179 -0.3958,5.6114 1.0455,1.8109 2.7865,2.8004 4.6139,3.3513 1.8273,0.5508 3.8035,0.7301 5.6763,0.9491 1.8727,0.219 3.6367,0.4822 4.967,1.0391 1.3302,0.5569 2.213,1.2965 2.719,2.7441 4.3251,12.373 -1.2364,25.7267 -11.9374,36.1205 -10.701,10.3938 -26.4714,17.6458 -41.9427,17.6458 -15.5891,0 -29.6399,-4.9595 -39.7753,-13.925 -10.1353,-8.9656 -16.3995,-21.923 -16.3995,-38.1829 0,-3.2595 0.4628,-6.5754 1.2965,-9.8785 0.6566,0.7003 1.3089,1.3984 1.9824,2.1049 -0.34,0.8838 -0.5918,1.7984 -0.6678,2.7465 v 0.01 0.01 c -0.4027,6.3581 5.1006,11.9768 12.1219,12.8049 v 0 0 c 1.3955,0.1604 2.7854,0.08 4.1364,-0.1588 0.7589,0.7073 1.5097,1.3991 2.2562,2.0816 -0.1544,0.6385 -0.049,1.302 0.3099,1.8691 -1.5555,0.3763 -3.0192,0.9998 -4.2905,1.903 -5.3754,3.8193 -5.8236,11.2283 -1.0816,16.173 4.7418,4.9448 12.7437,5.9196 18.1192,2.1003 v 0 0 c 1.5334,-1.0917 2.68,-2.5178 3.4259,-4.1112 0.1856,0.4953 0.4091,0.9784 0.7192,1.4208 0.6209,0.8859 1.2643,1.5801 1.91,2.196 -0.2244,0.7208 -0.3944,1.4569 -0.4495,2.2135 v 0.01 0.01 c -0.4029,6.3582 5.1005,11.9773 12.1219,12.8054 7.0214,0.8281 13.287,-3.5338 13.6898,-9.892 0.4029,-6.3581 -5.1005,-11.9778 -12.1219,-12.806 v 0 0 c -0.2871,-0.032 -0.5747,-0.033 -0.8622,-0.048 -0.8953,-1.92 -2.0144,-3.3007 -2.9957,-4.3085 -2.1316,-2.1883 -4.8141,-2.4542 -7.0399,-1.7793 -2.3894,-3.4306 -5.9651,-7.8321 -10.3747,-12.813 0.3179,-0.8667 0.1457,-1.8857 -0.5412,-2.5725 -0.6175,-0.6176 -1.4982,-0.7884 -2.301,-0.5937 -0.4443,-0.4844 -0.8921,-0.9708 -1.3467,-1.4605 0.2043,-0.69 0.359,-1.3934 0.4092,-2.1149 v 0 0 c 0.4028,-6.3581 -5.1001,-11.9773 -12.1213,-12.8055 -0.6065,-0.072 -1.2148,-0.1056 -1.8213,-0.1016 h -0.042 -0.042 c -0.3271,0.025 -0.6471,0.083 -0.9696,0.1308 -2.5053,-2.4157 -4.9784,-4.7241 -7.386,-6.9097 9.2601,-16.8322 28.2599,-30.6155 50.1214,-30.6217 z m -0.9807,6.8647 c -6.3249,0.043 -11.5055,4.2633 -11.8686,9.993 -0.4028,6.3582 5.1005,11.9779 12.1219,12.806 7.0214,0.8281 13.287,-3.5339 13.6898,-9.892 0.4029,-6.3582 -5.1004,-11.9773 -12.1218,-12.8054 -0.6065,-0.072 -1.2149,-0.1057 -1.8213,-0.1016 z m 0.016,2.3997 c 0.5061,0 1.0156,0.025 1.5242,0.085 5.9111,0.6971 10.3156,5.4093 10.0076,10.2702 -0.308,4.861 -5.1029,8.3575 -11.014,7.6604 -5.9111,-0.6971 -10.3156,-5.4098 -10.0076,-10.2708 0.2771,-4.3726 4.1972,-7.7094 9.4898,-7.7451 z m 27.4223,4.0594 c -4.9805,-10e-5 -9.0433,4.0633 -9.0433,9.0438 10e-5,4.9804 4.0629,9.0433 9.0433,9.0432 4.9804,0 9.0438,-4.0629 9.0438,-9.0432 10e-5,-4.9804 -4.0634,-9.0438 -9.0438,-9.0438 z m -53.9735,1.8358 c -3.0706,-0.1709 -6.046,0.6239 -8.3924,2.2912 -5.3754,3.8193 -5.823,11.2283 -1.0811,16.173 4.742,4.9448 12.7438,5.9199 18.1192,2.1003 5.3754,-3.8193 5.8229,-11.2277 1.0811,-16.1725 -2.4948,-2.6014 -6.0248,-4.1859 -9.7268,-4.392 z m 53.9735,0.5639 c 3.6834,0 6.6441,2.9606 6.6441,6.6441 -10e-5,3.6834 -2.9607,6.6435 -6.6441,6.6435 -3.6835,0 -6.6435,-2.9601 -6.6435,-6.6435 -1e-4,-3.6835 2.96,-6.6442 6.6435,-6.6441 z m -54.1066,1.8323 c 3.0993,0.1725 6.084,1.5252 8.128,3.6566 3.9,4.0669 3.5328,9.5203 -0.7391,12.5556 -4.2718,3.0354 -11.0971,2.2621 -14.9974,-1.8049 -3.9001,-4.067 -3.5322,-9.5204 0.7396,-12.5557 1.8557,-1.3185 4.2986,-1.9946 6.8689,-1.8516 z m 64.43,28.6861 c -6.325,0.043 -11.5055,4.2632 -11.8686,9.9929 -0.4028,6.3582 5.1,11.9773 12.1213,12.8055 7.0214,0.8281 13.287,-3.5332 13.6898,-9.8914 0.403,-6.3583 -5.0998,-11.9779 -12.1213,-12.806 -0.6064,-0.072 -1.2149,-0.1052 -1.8212,-0.101 z m 0.016,2.3997 v 0 c 0.506,0 1.015,0.025 1.5236,0.085 5.9111,0.6972 10.3157,5.4099 10.0075,10.2709 -0.3079,4.861 -5.1022,8.3576 -11.0133,7.6604 -5.911,-0.6973 -10.3156,-5.4099 -10.0076,-10.2709 0.277,-4.3726 4.1966,-7.7094 9.4892,-7.745 z m -62.3081,10.2913 c 4.5357,5.1406 8.2207,9.6962 10.4524,12.9969 l 0.6182,-1.164 0.373,1.6917 h 2.2626 l -0.3707,-0.5481 c 1.2777,-0.2273 2.6112,0.077 3.9099,1.4103 0.995,1.0219 2.0346,2.2744 2.8241,4.2385 l 0.3024,0.753 h 0.8119 c 0.4551,-2e-4 0.9129,0.025 1.3701,0.076 5.9086,0.6992 10.3108,5.4101 10.0029,10.2697 -0.3079,4.861 -5.1029,8.3575 -11.014,7.6604 -5.9089,-0.6969 -10.3114,-5.406 -10.007,-10.265 0.058,-0.7857 0.2359,-1.5498 0.5318,-2.276 l 0.3281,-0.8044 -0.662,-0.5628 c -0.7005,-0.5955 -1.3938,-1.3231 -2.0874,-2.3127 -0.8014,-1.1433 -0.9566,-3.1 -0.4308,-4.7154 l 0.279,-0.8564 -0.7448,-0.5067 c -0.4819,-0.328 -0.9894,-0.6852 -1.5218,-1.0706 l -2.5399,-1.8387 0.6631,3.0646 c 0.6756,3.1214 -0.5041,6.1115 -3.2076,8.0363 -4.272,3.0344 -11.0959,2.2606 -14.9956,-1.8061 -3.9002,-4.067 -3.533,-9.5203 0.739,-12.5556 1.8452,-1.311 4.2715,-1.9829 6.8256,-1.8499 0.1423,0.024 0.2846,0.049 0.4262,0.077 l 4.4568,0.8995 -3.4324,-2.9817 c -0.2144,-0.1862 -0.4348,-0.3813 -0.6514,-0.5709 z m 49.9458,10.4623 c -3.0706,-0.1709 -6.0456,0.624 -8.3919,2.2912 -5.3753,3.8193 -5.8229,11.2283 -1.081,16.173 4.7419,4.9446 12.7433,5.9196 18.1186,2.1003 5.3753,-3.8193 5.8235,-11.2283 1.0816,-16.173 -2.4947,-2.6015 -6.0254,-4.1854 -9.7273,-4.3915 z m -0.1331,2.3962 c 3.0993,0.1726 6.084,1.5247 8.1279,3.656 3.9001,4.067 3.5329,9.5203 -0.739,12.5556 -4.2718,3.0352 -11.0966,2.2619 -14.9968,-1.8049 -3.9001,-4.0669 -3.5329,-9.5203 0.739,-12.5556 1.8556,-1.3185 4.2987,-1.9941 6.8689,-1.8511 z"
       id="path1540"
       inkscape:export-filename="..\..\Desktop\path1540.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" /><path
       style="fill:#1d0d4c;fill-opacity:1;stroke:none;stroke-width:2.39988;stroke-linecap:round;stroke-linejoin:round;paint-order:markers stroke fill"
       d="m 2381.4312,1716.1484 c -0.423,0.025 -0.9244,0.179 -1.2965,0.551 -0.372,0.3721 -0.5256,0.8735 -0.551,1.2965 -0.026,0.423 0.045,0.8115 0.1593,1.2153 0.228,0.8077 0.6509,1.6904 1.2469,2.729 1.1919,2.0772 3.0933,4.7402 5.5834,7.8746 4.9803,6.2688 12.3098,14.389 20.8447,22.924 4.1307,4.1249 8.309,8.1079 12.2923,11.7179 a 1.2000581,1.2000581 0 0 0 1.6544,-0.04 l 6.4864,-6.4865 a 1.2000581,1.2000581 0 0 0 0.041,-1.6543 c -3.6096,-3.9831 -7.5929,-8.1618 -11.7179,-12.2929 -8.535,-8.535 -16.6552,-15.865 -22.924,-20.8453 -3.1344,-2.4901 -5.7974,-4.3909 -7.8746,-5.5828 -1.0386,-0.5959 -1.9213,-1.0189 -2.7289,-1.2469 -0.4039,-0.1139 -0.7924,-0.1848 -1.2154,-0.1593 z m 0.6725,2.52 c 0.4771,0.1467 1.1816,0.4537 2.0775,0.9678 1.8858,1.0821 4.4959,2.9331 7.5763,5.3803 6.1607,4.8944 14.2372,12.1807 22.7196,20.6631 3.8156,3.8212 7.4789,7.6698 10.8593,11.3724 l -4.8497,4.8497 c -3.7026,-3.3807 -7.551,-7.0444 -11.3718,-10.8599 v 0 c -8.4821,-8.4821 -15.7677,-16.5585 -20.662,-22.719 -2.4472,-3.0804 -4.2988,-5.6905 -5.3809,-7.5764 -0.514,-0.8958 -0.821,-1.6003 -0.9678,-2.0775 z m 46.5939,39.0467 a 1.2000581,1.2000581 0 0 0 -0.8826,0.3509 l -6.3137,6.3137 a 1.2000581,1.2000581 0 0 0 0.05,1.7442 c 5.7431,5.1217 10.7429,9.1534 14.4504,11.6327 a 1.2000581,1.2000581 0 0 0 1.8078,-0.6258 c 0.2866,-0.8803 0.7531,-1.6333 1.2959,-2.1055 0.4173,-0.3633 0.91,-0.6853 1.4383,-0.93 a 1.2000581,1.2000581 0 0 0 0.4898,-1.7611 c -2.4899,-3.6825 -6.4615,-8.5958 -11.4751,-14.2181 a 1.2000581,1.2000581 0 0 0 -0.861,-0.4004 z m -0.1045,2.9666 c 4.0985,4.6452 7.4552,8.7695 9.7052,11.9543 -0.2663,0.183 -0.5289,0.3702 -0.7682,0.5785 -0.5585,0.4859 -0.9839,1.0867 -1.3432,1.7302 -3.1997,-2.2506 -7.3658,-5.6362 -12.0699,-9.7869 z"
       id="path1517" /><path
       style="fill:#1d0d4c;fill-opacity:1;stroke:none;stroke-width:2.39988;stroke-linecap:round;paint-order:markers stroke fill"
       d="m 2442.1784,1771.2228 c -1.8012,0.1198 -3.4199,0.9229 -4.6483,1.9917 -1.3576,1.1812 -2.1237,2.9348 -2.3653,4.747 -0.2417,1.8122 0.04,3.736 1.1097,5.2618 2.5192,3.5943 5.4362,4.7664 7.7094,5.5163 1.1366,0.3749 2.104,0.6723 2.8498,1.0939 0.7457,0.4216 1.3001,0.9237 1.7862,1.9129 l 1.5644,3.1837 0.6894,-3.4797 c 0.157,-0.7922 0.26,-1.5273 0.3555,-2.2543 l 0.9544,1.2941 0.057,-3.552 c 0.1225,-7.6505 -2.5754,-11.3796 -4.6821,-13.5433 -1.6077,-1.6504 -3.5791,-2.2919 -5.3803,-2.1721 z m 0.1594,2.3945 c 1.1686,-0.078 2.3341,0.2536 3.5018,1.4523 1.6247,1.6688 3.4496,3.9434 3.8923,8.9522 l -0.5767,-0.502 -0.061,2.555 c -0.018,0.737 -0.075,1.5274 -0.1728,2.3682 -0.2998,-0.2425 -0.5875,-0.5184 -0.9065,-0.6987 -1.0722,-0.6061 -2.1866,-0.9233 -3.2789,-1.2836 -2.1845,-0.7206 -4.3142,-1.5018 -6.4958,-4.6145 -0.6188,-0.8829 -0.8731,-2.2385 -0.6958,-3.5678 0.1773,-1.3292 0.7856,-2.5786 1.5609,-3.2531 0.8795,-0.7653 2.064,-1.3303 3.2328,-1.408 z"
       id="path1518" /></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
